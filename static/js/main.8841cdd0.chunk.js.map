{"version":3,"sources":["images/hippo-footprints.png","components/Task.jsx","ToDoList.jsx","reportWebVitals.js","index.js"],"names":["Task","props","className","task","src","deleteIcon","alt","onClick","delete","index","ToDoList","todosData","JSON","parse","localStorage","getItem","useState","value","setValue","todos","setTodos","addTodo","text","setItem","stringify","deleteTodo","newTodos","filter","i","taskElement","map","onSubmit","event","preventDefault","type","autoFocus","placeholder","onChange","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAAe,MAA0B,6CCoB1BA,G,MAdF,SAACC,GAMZ,OACE,qBAAIC,UAAU,aAAd,UACED,EAAME,KACP,qBAAKD,UAAU,mBAAmBE,IAAKC,EAAYC,IAAI,aAAaC,QAPtD,WACnBN,EAAMO,OAAOP,EAAMQ,eCmDJC,G,MAtDE,WACf,IAAMC,EAAYC,KAAKC,MAAMC,aAAaC,QAAQ,UAD7B,EAEKC,mBAAS,IAFd,mBAEdC,EAFc,KAEPC,EAFO,OAGKF,mBAASL,GAHd,mBAGdQ,EAHc,KAGPC,EAHO,KAgBfC,EAAU,SAACC,GAChBR,aAAaS,QAAQ,QAASX,KAAKY,UAAL,sBAAmBL,GAAnB,CAA0BG,MACxDF,EAASR,KAAKC,MAAMC,aAAaC,QAAQ,YAGpCU,EAAa,SAAChB,GAClB,IAAMiB,EAAWP,EAAMQ,QAAO,SAACxB,EAAMyB,GAAP,OAAaA,IAAMnB,KACjDK,aAAaS,QAAQ,QAASX,KAAKY,UAAUE,IAC7CN,EAASR,KAAKC,MAAMC,aAAaC,QAAQ,YAGvCc,EAAcV,EAAMW,KAAI,SAAC3B,EAAMyB,GAAP,OAAa,cAAC,EAAD,CAAMzB,KAAMA,EAAcK,OAAQiB,EAAYhB,MAAOmB,GAA9BA,MAGhE,OACE,yBAAS1B,UAAU,OAAnB,SACE,sBAAKA,UAAU,gBAAf,UACA,oBAAIA,UAAU,cAAd,wBACA,sBAAMA,UAAU,aAAa6B,SAxBZ,SAACC,GACpBA,EAAMC,iBACNZ,EAAQJ,GACRC,EAAS,KAqBP,SACE,uBACEhB,UAAU,cACVgC,KAAK,OACLC,WAAS,EACTlB,MAAOA,EACPmB,YAAY,kBACZC,SAnCa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACtBpB,EAASoB,EAAOrB,YAuCd,oBAAIf,UAAU,cAAd,SACG2B,WCzCMU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8841cdd0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/hippo-footprints.9342d27d.png\";","import React from \"react\";\nimport deleteIcon from \"../images/hippo-footprints.png\"\nimport \"./Task.scss\";\n\n\n\nconst Task = (props) => {\n\nconst deleteTask = () => {\nprops.delete(props.index)\n}\n\n  return (\n    <li className=\"todo__task\" >\n     {props.task}\n     <img className=\"todo__deleteIcon\" src={deleteIcon} alt=\"deleteIcon\" onClick={deleteTask}/>\n    </li>\n  );\n};\n\nexport default Task;\n","import React, { useState } from \"react\";\nimport Task from \"./components/Task\";\nimport \"./ToDoList.scss\";\n\n\n\nconst ToDoList = () => {\n  const todosData = JSON.parse(localStorage.getItem('todos'))\n  const [value, setValue] = useState(\"\");\n  const [todos, setTodos] = useState(todosData);\n\n\n  const handleChange = ({ target }) => {\n    setValue(target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    addTodo(value);\n    setValue(\"\");\n  };\n\n  const addTodo = (text) => {\n   localStorage.setItem('todos', JSON.stringify([...todos, text]));\n   setTodos(JSON.parse(localStorage.getItem('todos')));\n  };\n\n  const deleteTodo = (index) => {\n    const newTodos = todos.filter((task, i) => i !== index);\n    localStorage.setItem('todos', JSON.stringify(newTodos));\n    setTodos(JSON.parse(localStorage.getItem('todos')));\n  }\n\n  let taskElement = todos.map((task, i) => <Task task={task} key={i} delete={deleteTodo} index={i}/>\n  )\n\n  return (\n    <section className=\"todo\">\n      <div className=\"todo__content\">\n      <h1 className=\"todo__title\">Baka ToDos</h1>\n      <form className=\"todo__form\" onSubmit={handleSubmit}>\n        <input\n          className=\"todo__input\"\n          type=\"text\"\n          autoFocus\n          value={value}\n          placeholder=\"What's my task?\"\n          onChange={handleChange}\n\n        />\n      </form>\n\n      <ul className=\"todo__tasks\">\n        {taskElement}\n        </ul>\n        </div>\n    </section>\n  );\n};\n\nexport default ToDoList;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport ToDoList from './ToDoList';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ToDoList />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}